how to create project ->

	file -> new -> dynamic web project 
	dynamic web module - 2.5 
	
	servlet-api.jar  
	
	add external jar into project ->	
			project right click --> properties -> java build path -> lib -> add external jar -->
				now select servlet-api.jar from lib folder inside apache tomcat. 
				
				jump to order and exports-> select all -> apply and close.
				
-----------------------------------------------------

folders --> src -> com ->
						controller
						dao 
						util
						bean 
-----------------------------------------------------
if all data are present then we need to store those data into database. 

jdbc --> db connection --> db query --> 


jdbc ---> 1) db url , db username, db password 
		  2) db - drivers 						
		  
		  
		  
1) download mysql connector and link it in project
2) create DbConnection class for data base connection in util folder 		  
-----------------------------------------------------

mysql -u root -p 
root 

create database svp;  //one time 

use svp; 

//one time 
create table products (
	productId integer primary key auto_increment,
	name varchar(30),
	qty integer,
	price integer
);

-----------------------------------------------------
insert --> list [ db --> records -> jsp page  ] 

-----------------------------------------------------

jstl --> java standard tag library 


html --> <b>  <i>  <a> 
java --> customtag -->  jstl | developer --> customtag  

jstl -->	5 category  
		sql 
		core* 
		formatting 
		xml 
		function 

	1) jstl.jar download --> set build-path
	2) taglib -> jsp 



-----------------------------------------------------

filter :- pre process 
		 
		 whatsapp ==>  X -> image 25 mb send Y user 
		 
		X -> 25 MB -> W.server ---> 25 MB -> Y
		
		X -> 25 MB --> preProcess -> compress  -> 5MB -> W.server ---> Y 
		
		bank --> request -> ip black --> pakistan 
		
		Signup.jsp -> submit data -->   filter --> data validation |  server -> db save 
		

	1) class implements Filter 
	2) override ==> init destroy  doFilter 
	3) map web.xml | annotation 

e.x :-> 
		InputNum.jsp 	
				no1
				no2 
						submit 
						
		Filter --> InputValidationFilter -> no1 and no2 must present 				
		AddServlet  
				no1+no2 	 
				
		InputNumbers.jsp --> InputValidationFilter ---> AddNumController 		
-----------------------------------------------------
			
		InputNumbers.jsp --> InputValidationFilter --->   Filter ------>  AddNumController 	
-----------------------------------------------------
headers -->	

	submit request -> hidden information --> browser -> server 
	
	request headers --> client** 
	response headers --> server 
	
-----------------------------------------------------
reusable web component ->
inclusion --> 

Header.jsp
Footer.jsp 


--header
InclusionHome.jsp
--footer 


inclusion :-
	1) static inclusion  <%@ include %> <header and footer variable can access in home > <code copy> 
	2) dynamic inclusion <jsp:include>  < we can not access any variable from other jsp > <output>
	
	
	Header.jsp -> 5kb
	Footer.jsp -> 5kb 
	
	Home.jsp ->5 kb 
	
	static -> Home.jsp -> 15kb  
	dynamic -> Home.jsp -> 5kb
	
	
	
	
	Header.jsp	
		5 line 
		
	Footer.jsp
		5 line 
			
	
	
	static : Home.jsp 
	
	header.jsp 5 line 
	Home 5 line
	footer.jsp 5 line  
	
	home.jsp > total lines --> 15 lines
	
	
	dynamic : Home.jsp
	
	header.jsp [ go to header.jsp and run ] 5 
	Home 5 line                             5 
	footer.jsp [ go to footer.jsp and run ] 5  
	

-----------------------------------------------------	 
ELfunction:-0	

1) class - logic 
2) tld [ information ] [function*]
3) web.xml -> tld  	
4) jsp use 	
	
greet->function 
-----------------------------------------------------	 
session
cookie 
useBean
customTag


to store user's information :-
		1) cookie  -- client's browser --frontend 
		2) session -- server's memory -- backed--serverside  
	
	
	   privacy , security -> credit card -->  session 
	   token , firstName --> cookie 
	   
	
	
	
	
	
	
	
	
	
	
	
	













	


















